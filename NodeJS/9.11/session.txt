"메모이 제이션" 이랑 비슷한 의미이다. 
세션은 쿠키를 기반, 파일을 브라우저에 저장하는 쿠키와 달리 세션은 서버에서 관리
        서버측에서는 사용자 구분을 위해 각각의 세션 ID를 부여, 웹 브라우저가 서버에 접속
        해서 종료할 때까지 상태 유지, 접속 시간에 제한을 둘 수 있음

        정보를 서버에서 관리하기 때문에 보안에 더 용이
        그러나 사용자가 많아질 수록 서버 자체 가지고 있는 세션이 데이터 상승,
        따라서 서버에 부담 증가

        로그인 인증정보와 같은 보안상 중요한 작업을 수행할 때 사용.

-----------------------------------------------------------------
app.use(
    session({
    secret: "node-secret", // 암호키 이름 백엔드에서 적어주는 것.
    resave:false, // 세션이 값이 똑같으면 다시 저장하지 않겠다
    saveUninitialized: false, 
    // req 메시지가 들어 왔을 떄 session에 아무런 작업이 이루어지지 않을때 
    // 보통은  false , 만약 true시 아무내용이 없는 session이 계속 저장될수 있음. false 로 함으로써 저장시키지 않음
    cookie: {
        httpOnly: true,
        maxAge: 5 * 6000,

    },
})
);
---------------------------------------------------------
💜  resave:false, 
-> 유저의 로그인 정보가 같으면 
캐싱을써서 다시 새로운 session에 저장하지 않고 캐싱에 저장된 유저의 정보를 꺼내서 
보여주겠다. 새로운 세션 생성 x

💜 saveUninitialized: false
-> 기존에 로그인 했던 유저가 다시 들어 왔을때 새로운 세션을 만들지 않도록 
false 의 값.  설정?(로그인 유지) 