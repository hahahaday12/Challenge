/*
"type": "module" 해야 import 를 쓸수 있음


req

*req -> app 객체 접근

*req.cookies -> 미들웨어가 만든 쿠키를 해석

*req.params -> url 담긴 매개변수에 대한 정보

*req.query -> url 담신 퀴리스트링에 대한 정보 

*req.get(헤더이름) -> 헤더의 값을 가져올때 사용

res

    res.app

    > 쿠키가 만들어지는것, 
    이 쿠키를 백엔드에서 만들어주면 프론트엔드에서 설정을 해주면 쿠키값을 가지고 올수 있다. 마치 쿠키를 만든것처럼 
    공유할래 라고 하는 순간 쿠기가 만들어진다. 이 쿠기값도 만들었으니 삭제할수 도 있다. 

    res.cookie(키, 값, 옵션)
    - 쿠기 설정, 프론트엔드 설정에 따라 백엔드에 설정한 쿠키 값을 공유 

    res.clearCookie(키 , 값, 옵션)
    - 쿠키 삭제 


    ## 추가 설명 ## 
    ->  홈페이지가 잇음 근데 3000명의 동시접속자가 잇음 그럼 이 홈페이지 서버에서 이 3000명의 로직을 다 가지고 
    있는게 나을까?  서버의 홈페이지는 필요도 없는데? 따라 , 3000명을 받지 못하니 본인 것은 본인이 가지고 있으라고 
    사용자에게 나눠준다. 허나 사용자에게는 저장소가 없는데 웹 브라우저에는 웹스토리지, 쿠리 등등 저장소가 저장한다. 
    네이버 같은곳 들어가보면 저장소가 존재한다. 쿠키 , 로컬 스토리지 이런것들이 보인다. 

 */