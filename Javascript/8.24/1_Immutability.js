/*
코드의 불변성  
object 라는 특정한 상태를 만들때 
이 상태를 어딘가에서 주고 받아야 된다면, 
상태를 변경되지 않도록 불변성을 유지되게 코딩해야한다.
*/

// 이렇게 함수 내부에서 외부로부터 주어진 인자의 값을 변경하는것 안됨
// 상태변경이 필요한 경우에는 새로운 상태, 값을 만들어서 반환해야 한다. 
// 원시값 = 값에 의한 복사 
// 객체값 = 참조에 의한 복사 (메모리)

function display(num) {
    num =5;
console.log(num)
}
const value = 4;
display(value);

// 쓰는 예시 만약 새로운 값을 추가 하고 싶다면? 

function Name(obj){
    return {...obj, name:'Bob'};
}
// 기존에 있는 obj는 그대로 유지한채 , 변경하고 싶은 값만 써주면  된다 
// 함수 내부에서 어떤걸 바꿔야 한다면 이름 부터 변경하는 느낌을 주고(Change) 반환할때는 새로운 오브젝트 만듬


/*  " 리액트" 를 할때도 불변성이 중요하다는 얘기를 들은것 같다 .
  예를 들면 객체가 추가될때 기존의 값을 그대로 유지한채( 불변성 ) 새로운 값만
추가 하도록 한다*/




